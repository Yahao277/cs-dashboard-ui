name: 'Push Image to ECR'

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY_NAME: nestjs-app
  # EC2_INSTANCE_ID: your-ec2-instance-id
  # SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  push-ecr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - name: Deploy to EC2 instance
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ubuntu
      #     key: ${{ env.SSH_PRIVATE_KEY }}
      #     script: |
      #       export ES=${{ env.ECR_REPOSITORY_NEXTJS }}
      #       export ECR_REPOSITORY_NESTJS=${{ env.ECR_REPOSITORY_NESTJS }}
      #       export GITHUB_SHA=${{ github.sha }}CR_REPOSITORY_NEXTJ
      #       export AWS_REGION=${{ env.AWS_REGION }}
      #       export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
      #       export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #       cd /path/to/your/docker-compose
      #       docker login -u AWS -p $(aws ecr get-login-password --region $AWS_REGION) $ECR_REPOSITORY_NEXTJS
      #       docker-compose pull
      #       docker-compose up -d